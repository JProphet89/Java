/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import javax.swing.*;

import Ddesc2OWL.OWLGenerator;
import GramConstructor.*;
import OWL.*;
import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.dom4j.*;
import org.dom4j.io.*;
import org.json.simple.parser.ParseException;
import source.*;
import RDF.*;

/**
 *
 * @author jprophet89
 */
public class OWL2GRA extends javax.swing.JFrame {

    /**
     * Variabes
     */
    public Ontology ontology;
    public File ontofile=null;
    public File owlfile=null;
    public File ddescfile=null;
    public File grammarfile=null;
    /**
     * Creates new form OWL2GRA
     */
    public OWL2GRA() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        file_onto = new javax.swing.JButton();
        run_ont2owl = new javax.swing.JButton();
        radio_ont2owl = new javax.swing.JRadioButton();
        radio_owl2ont = new javax.swing.JRadioButton();
        file_texonto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea_onto = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        progress_onto = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        file_owl = new javax.swing.JButton();
        file_textowl = new javax.swing.JLabel();
        run_owl2dsl = new javax.swing.JButton();
        Statistics = new javax.swing.JLabel();
        progress_owl = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea_owl = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        file_owlddesc = new javax.swing.JButton();
        file_ddesc = new javax.swing.JButton();
        file_owlin = new javax.swing.JLabel();
        file_ddescin = new javax.swing.JLabel();
        run_ddesc = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        file_grammcin = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        file_onto.setText("Select File");
        file_onto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                file_ontoMousePressed(evt);
            }
        });

        run_ont2owl.setText("Run Module");
        run_ont2owl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    run_ont2owlMouseClicked(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (DocumentException e) {
                    e.printStackTrace();
                }
            }
        });

        radio_ont2owl.setSelected(true);
        radio_ont2owl.setText("OntoDL2OWL");
        radio_ont2owl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                radio_ont2owlMouseClicked(evt);
            }
        });

        radio_owl2ont.setText("OWL2OntoDL");
        radio_owl2ont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                radio_owl2ontMouseClicked(evt);
            }
        });

        file_texonto.setText("File::");

        textarea_onto.setColumns(20);
        textarea_onto.setRows(5);
        jScrollPane1.setViewportView(textarea_onto);

        jLabel2.setText("Statistics");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(file_onto)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(file_texonto)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(radio_ont2owl)
                                                                .addGap(18, 18, 18))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addGap(585, 585, 585)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(radio_owl2ont)
                                                                .addGap(94, 94, 94)
                                                                .addComponent(run_ont2owl))
                                                        .addComponent(progress_onto, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(file_onto)
                                        .addComponent(run_ont2owl)
                                        .addComponent(radio_ont2owl)
                                        .addComponent(radio_owl2ont)
                                        .addComponent(file_texonto))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(progress_onto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("Onto2OWL", jPanel1);

        file_owl.setText("Select File");
        file_owl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                file_owlMouseClicked(evt);
            }
        });

        file_textowl.setText("File::");

        run_owl2dsl.setText("Run Module");
        run_owl2dsl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                try {
                    run_owl2dslMouseClicked(evt);
                } catch (DocumentException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        Statistics.setText("Statistics");

        textarea_owl.setColumns(20);
        textarea_owl.setRows(5);
        jScrollPane2.setViewportView(textarea_owl);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(file_owl)
                                                .addGap(18, 18, 18)
                                                .addComponent(file_textowl)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(run_owl2dsl))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(Statistics)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 591, Short.MAX_VALUE)
                                                .addComponent(progress_owl, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(file_owl)
                                        .addComponent(file_textowl)
                                        .addComponent(run_owl2dsl))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Statistics)
                                        .addComponent(progress_owl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("OWL2DSL", jPanel2);

        file_owlddesc.setText("Select OWL File");
        file_owlddesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                file_owlddescMouseClicked(evt);
            }
        });

        file_ddesc.setText("Select DDesc File");
        file_ddesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                file_ddescMouseClicked(evt);
            }
        });

        file_owlin.setText("File::");

        file_ddescin.setText("File::");

        run_ddesc.setText("Run Module");
        run_ddesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                try {
                    try {
                        run_ddescMouseClicked(evt);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    } catch (DocumentException e) {
                        e.printStackTrace();
                    } catch (ParseException e) {
                        e.printStackTrace();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        jButton1.setText("Select Grammar File");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        file_grammcin.setText("File::");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(file_ddesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(file_owlddesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                                .addComponent(file_owlin)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 661, Short.MAX_VALUE)
                                                                .addComponent(run_ddesc))
                                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                                .addComponent(file_ddescin)
                                                                .addGap(219, 219, 219)
                                                                .addComponent(jButton1)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(file_grammcin)
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(file_owlddesc)
                                        .addComponent(file_owlin)
                                        .addComponent(run_ddesc))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(file_ddesc)
                                        .addComponent(file_ddescin)
                                        .addComponent(jButton1)
                                        .addComponent(file_grammcin))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("DDesc2OWL", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>                        


    private void file_ontoMousePressed(java.awt.event.MouseEvent evt) {
        // Select the file for the onto module
        this.file_onto.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setVisible(true);
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    file_texonto.setText("File::"+selectedFile.getName());
                    ontofile=selectedFile;
                }
            }
        });

    }

    private void radio_owl2ontMouseClicked(java.awt.event.MouseEvent evt) {
        this.radio_owl2ont.setSelected(true);
        this.radio_ont2owl.setSelected(false);
    }

    private void radio_ont2owlMouseClicked(java.awt.event.MouseEvent evt) {
        this.radio_owl2ont.setSelected(false);
        this.radio_ont2owl.setSelected(true);
    }

    public void run_onto2owl() throws IOException, DocumentException {
        this.textarea_onto.setText("");
        if(radio_ont2owl.isSelected()){
            if(!this.ontofile.exists()){
                return;
            }
            OntoDLLexer lex = new OntoDLLexer(new ANTLRFileStream(ontofile.getAbsolutePath(), "UTF8"));
            CommonTokenStream tokens = new CommonTokenStream(lex);
            OntoDLParser g = new OntoDLParser(tokens,null);
            try {
                Ontologies overturns=g.ontology();
                overturns.gerarowl(ontofile.getName().substring(0, ontofile.getName().indexOf(".")), this.textarea_onto);
            } catch (RecognitionException e) {
                e.printStackTrace();
            }
        }
        if(radio_owl2ont.isSelected()){
            SAXReader reader = new SAXReader();
            Document doc = reader.read(ontofile);
            Element root = doc.getRootElement();
            if(!root.elements("Class").isEmpty()){
                textarea_onto.setText(textarea_onto.getText()+"It was found a RDF::file\n");
                RDF parser1=new RDF();
                this.ontology=parser1.RDFparser(this.ontofile, this.textarea_onto,this.progress_onto);
            }else{
                textarea_onto.setText(textarea_onto.getText()+"It was found a OWL::file\n");
                OWL parser=new OWL();
                this.ontology=parser.OWlparser(this.ontofile,this.textarea_onto,this.progress_onto);
            }
            if(this.ontology!=null){
                textarea_onto.setText(textarea_onto.getText()+"The onto file \n");
                OWL2Onto onto=new OWL2Onto();
                onto.Ontofilecreator(this.ontology,this.ontofile.getName().substring(0,ontofile.getName().indexOf(".")));
            }

        }
        this.ontofile=null;
    }

    private void run_ont2owlMouseClicked(java.awt.event.MouseEvent evt) throws IOException, DocumentException {
        /**
         * Run Onto2OWl
         */
       run_onto2owl();
    }

    private void file_owlMouseClicked(java.awt.event.MouseEvent evt) {
        // Select the file for the onto module
        this.file_owl.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setVisible(true);
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    file_textowl.setText("File::"+selectedFile.getName());
                    owlfile=selectedFile;
                }
            }
        });
    }

    public void run_owl2dsl() throws DocumentException,IOException {
        // Select owl2dsl module
        //Run OWL2DSL
        this.textarea_owl.setText("");
        if(!owlfile.exists()){
            textarea_owl.setText("\nSelect a file first\n");
            return;
        }
        boolean flag;
        textarea_owl.setText("");
        String iri="";
        SAXReader reader = new SAXReader();
        Document doc = reader.read(owlfile);
        Element root = doc.getRootElement();
        if(!root.elements("Class").isEmpty()){
            textarea_owl.setText(textarea_owl.getText()+"It was found a RDF::file\n\n\n");
            RDF parser1=new RDF();
            this.ontology=parser1.RDFparser(this.owlfile, this.textarea_owl, this.progress_owl);
            flag=true;
            if(root.element("Ontology").attributeValue("about")!=null){
                iri=""+root.element("Ontology").attributeValue("about");
            }
        }else{
            textarea_owl.setText(textarea_owl.getText()+"It was found a OWL::file\n\n\n");
            OWL parser=new OWL();
            this.ontology=parser.OWlparser(this.owlfile, this.textarea_owl, this.progress_owl);
            flag=false;
            if(root.attributeValue("base")!=null){
                iri=root.attributeValue("base");
            }else{
                if(root.attributeValue("ontologyIRI")!=null){
                    iri=root.attributeValue("ontologyIRI");
                }
            }
        }
        if (this.ontology!=null){
            GramarConstructor gconstructor=new GramarConstructor();
            gconstructor.buildgrammartree(this.ontology,owlfile.getName(),flag,owlfile.getAbsolutePath(),iri);
        }
        this.owlfile=null;
    }

    private void run_owl2dslMouseClicked(java.awt.event.MouseEvent evt) throws DocumentException,IOException {
        run_owl2dsl();
    }

    private void file_owlddescMouseClicked(java.awt.event.MouseEvent evt) {
        // Select the file for the onto module
        this.file_owlddesc.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setVisible(true);
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    file_owlin.setText("File::"+selectedFile.getName());
                    owlfile=selectedFile;
                }
            }
        });
    }

    private void file_ddescMouseClicked(java.awt.event.MouseEvent evt) {
        // Select the file for the onto module
        this.file_ddesc.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fileChooser = new JFileChooser();
                int returnValue = fileChooser.showOpenDialog(null);
                fileChooser.setVisible(true);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    file_ddescin.setText("File::"+selectedFile.getName());
                    ddescfile=selectedFile;
                }
            }
        });
    }

    public void run_ddesc2owl() throws IOException, InterruptedException, DocumentException, ParseException {
        // Run DDesc2OWL module
        this.jTextArea1.setText("");
        if(grammarfile==null || ddescfile==null || owlfile==null){
            JOptionPane.showMessageDialog(null, "One of the required files is not selected!");
        }
        jTextArea1.setText(jTextArea1.getText()+"\n------\njava -jar antlr-3.5.1-complete.jar "+grammarfile.getAbsolutePath());
        Process p=Runtime.getRuntime().exec("java -jar antlr-3.5.1-complete.jar -Dfile.encoding=utf-8 "+grammarfile.getAbsolutePath());
        p.waitFor();
        if(p.exitValue()==0){
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }else{
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }
        jTextArea1.setText(jTextArea1.getText()+"\njavac -cp antlr-3.5.1-complete.jar:commons-io-2.4.jar:$CLASSPATH:dom4j-2.0.0-ALPHA-2.jar:json-simple-1.1.1.jar:. -encoding utf8 Main.java");
        p=Runtime.getRuntime().exec("javac -cp antlr-3.5.1-complete.jar:commons-io-2.4.jar:$CLASSPATH:dom4j-2.0.0-ALPHA-2.jar:json-simple-1.1.1.jar:. -encoding utf8 Main.java");
        p.waitFor();
        if(p.exitValue()==0){
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }else{
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }
        jTextArea1.setText(jTextArea1.getText()+"\njava -cp antlr-3.5.1-complete.jar:commons-io-2.4.jar:$CLASSPATH:dom4j-2.0.0-ALPHA-2.jar:json-simple-1.1.1.jar:. -Dfile.encoding=utf-8 Main "+ddescfile.getAbsolutePath());
        p=Runtime.getRuntime().exec("java -cp antlr-3.5.1-complete.jar:commons-io-2.4.jar:$CLASSPATH:dom4j-2.0.0-ALPHA-2.jar:json-simple-1.1.1.jar:. -Dfile.encoding=utf-8 Main "+ddescfile.getAbsolutePath());
        p.waitFor();
        if(p.exitValue()==0){
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }else{
            DataInputStream dis = new DataInputStream(p.getErrorStream());
            String line = "";
            while ( (line = dis.readLine()) != null)
            {
                jTextArea1.setText(jTextArea1.getText()+"\n"+line);
            }
            dis.close();
        }
        /**
         *
         *Generate the final OWL
         *
         **/
        jTextArea1.setText(jTextArea1.getText()+"\n\n------------\n");
        OWLGenerator gtemp=new OWLGenerator();

        textarea_owl.setText("");
        String iri="";
        SAXReader reader = new SAXReader();
        Document doc = reader.read(owlfile);
        Element root = doc.getRootElement();
        if(!root.elements("Class").isEmpty()){
            jTextArea1.setText(jTextArea1.getText()+"This ontology is writen using RDF:XML terminology\n\n\n");
            RDF parser1=new RDF();
            Ontology_RDF onto=parser1.RDFparser2(this.owlfile, this.textarea_owl, this.progress_owl);

            if(root.element("Ontology").attributeValue("about")!=null){
                iri=""+root.element("Ontology").attributeValue("about");
            }
            if (onto!=null){
                gtemp.generateRDF(onto,iri,grammarfile.getName().substring(0,grammarfile.getName().indexOf(".")),jTextArea1);
            }else{
                jTextArea1.setText(jTextArea1.getText()+"ERROR:: Problem detected on RDF parsing");
            }
        }else{
            textarea_owl.setText(textarea_owl.getText()+"It was found a OWL::file\n\n\n");
            OWL parser=new OWL();
            this.ontology=parser.OWlparser(this.owlfile, this.textarea_owl, this.progress_owl);
            if(root.attributeValue("base")!=null){
                iri=root.attributeValue("base");
            }else{
                if(root.attributeValue("ontologyIRI")!=null){
                    iri=root.attributeValue("ontologyIRI");
                }
            }
            if (this.ontology!=null){
                gtemp.generateOWL(this.ontology,iri,grammarfile.getName().substring(0,grammarfile.getName().indexOf(".")),jTextArea1);
            }
        }
        jTextArea1.setText(jTextArea1.getText()+"\n\nDone!!");
        this.grammarfile=null;
        this.ddescfile=null;
        this.owlfile=null;
    }

    private void run_ddescMouseClicked(java.awt.event.MouseEvent evt) throws IOException, InterruptedException, DocumentException, ParseException {
        run_ddesc2owl();
    }

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {
        // Select the file for the onto module
        this.jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                JFileChooser fileChooser = new JFileChooser();
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    file_grammcin.setText("File::"+selectedFile.getName());
                    grammarfile=selectedFile;
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, DocumentException, ParseException, InterruptedException {
        if(args.length!=0){
            CmdRun cmd=new CmdRun();
            cmd.run(args);
        }else{
        /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(OWL2GRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(OWL2GRA.class.getName()).log(java .util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(OWL2GRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(OWL2GRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

        /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new OWL2GRA().setVisible(true);
                }
            });
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel Statistics;
    private javax.swing.JButton file_ddesc;
    private javax.swing.JLabel file_ddescin;
    private javax.swing.JLabel file_grammcin;
    private javax.swing.JButton file_onto;
    private javax.swing.JButton file_owl;
    private javax.swing.JButton file_owlddesc;
    private javax.swing.JLabel file_owlin;
    private javax.swing.JLabel file_texonto;
    private javax.swing.JLabel file_textowl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JTextArea jTextArea1;
    private javax.swing.JProgressBar progress_onto;
    private javax.swing.JProgressBar progress_owl;
    private javax.swing.JRadioButton radio_ont2owl;
    private javax.swing.JRadioButton radio_owl2ont;
    private javax.swing.JButton run_ddesc;
    private javax.swing.JButton run_ont2owl;
    private javax.swing.JButton run_owl2dsl;
    public javax.swing.JTextArea textarea_onto;
    public javax.swing.JTextArea textarea_owl;
    // End of variables declaration
}
